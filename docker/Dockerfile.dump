FROM alpine:3.20

WORKDIR /dumpscript

# Instalar dependências base e ferramentas necessárias
RUN apk add --no-cache \
    aws-cli \
    jq \
    gzip \
    bash \
    tzdata \
    curl

ENV PATH="/usr/bin:${PATH}"

# Adicionar labels para identificar a imagem
LABEL org.opencontainers.image.title="dumpscript" \
      org.opencontainers.image.description="Database dump tool with runtime configurable client versions"

# Copiar scripts
COPY ./scripts/dump_db_to_s3.sh /usr/local/bin/dump_db_to_s3.sh
COPY ./scripts/install_db_clients.sh /usr/local/bin/install_db_clients.sh
COPY ./scripts/remove_old_backups.sh /usr/local/bin/remove_old_backups.sh
COPY ./scripts/entrypoint_dump.sh /usr/local/bin/entrypoint_dump.sh
COPY ./scripts/notify_slack.sh /usr/local/bin/notify_slack.sh
COPY ./scripts/s3_upload_with_refresh.sh /usr/local/bin/s3_upload_with_refresh.sh

# Dar permissões de execução
RUN chmod +x /usr/local/bin/dump_db_to_s3.sh \
    && chmod +x /usr/local/bin/install_db_clients.sh \
    && chmod +x /usr/local/bin/remove_old_backups.sh \
    && chmod +x /usr/local/bin/entrypoint_dump.sh \
    && chmod +x /usr/local/bin/notify_slack.sh \
    && chmod +x /usr/local/bin/s3_upload_with_refresh.sh

# Espera que todas as variáveis estejam setadas no ambiente
# DB_TYPE (mysql ou postgresql), DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_NAME
# AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_SESSION_TOKEN, AWS_ROLE_ARN, AWS_REGION, S3_BUCKET, S3_PREFIX, PERIODICITY
# DUMP_OPTIONS (opções específicas para mysqldump ou pg_dump)
# SLACK_WEBHOOK_URL (opcional), SLACK_CHANNEL (opcional), SLACK_USERNAME (opcional), SLACK_NOTIFY_SUCCESS (opcional)

ENTRYPOINT ["/usr/local/bin/entrypoint_dump.sh"]