# Exemplo de configuração para backup de banco de dados grande
# Este exemplo demonstra como configurar o dumpscript para lidar com
# dumps que demoram horas para finalizar, usando o novo sistema de
# refresh automático de credenciais AWS

apiVersion: batch/v1
kind: CronJob
metadata:
  name: large-database-backup
  namespace: backup-system
spec:
  # Executa diariamente às 2:00 AM
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: dumpscript-service-account
          containers:
          - name: dumpscript
            image: your-registry/dumpscript:latest
            env:
            # Configurações do banco de dados
            - name: DB_TYPE
              value: "mysql"
            - name: DB_HOST
              value: "prod.cu98qr8jhy71.sa-east-1.rds.amazonaws.com"
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database-credentials
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-credentials
                  key: password
            - name: DB_NAME
              value: "production"
            
            # Opções específicas para dumps grandes
            - name: DUMP_OPTIONS
              value: "--single-transaction --routines --triggers --quick --lock-tables=false --max_allowed_packet=1024M"
            
            # Configurações AWS
            - name: AWS_ROLE_ARN
              value: "arn:aws:iam::123456789012:role/DumpScriptRole"
            - name: AWS_REGION
              value: "sa-east-1"
            - name: S3_BUCKET
              value: "iclinic-main-backup-databases"
            - name: S3_PREFIX
              value: "mysql-backups"
            - name: PERIODICITY
              value: "daily"
            
            # Configurações de notificação Slack
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                secretKeyRef:
                  name: slack-webhook
                  key: url
            - name: SLACK_CHANNEL
              value: "#database-alerts"
            - name: SLACK_USERNAME
              value: "DumpScript Bot"
            - name: SLACK_NOTIFY_SUCCESS
              value: "true"
            
            resources:
              requests:
                memory: "512Mi"
                cpu: "250m"
              limits:
                memory: "2Gi"
                cpu: "1000m"
            
            # Timeout aumentado para dumps grandes (4 horas)
            # O novo sistema de refresh de credenciais permite
            # uploads que demoram várias horas
            activeDeadlineSeconds: 14400
            
          restartPolicy: OnFailure
          # Timeout do job aumentado para 6 horas
          activeDeadlineSeconds: 21600

---
# Service Account com IRSA (IAM Roles for Service Accounts)
apiVersion: v1
kind: ServiceAccount
metadata:
  name: dumpscript-service-account
  namespace: backup-system
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/DumpScriptRole

---
# Secret para credenciais do banco de dados
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: backup-system
type: Opaque
data:
  username: <base64-encoded-username>
  password: <base64-encoded-password>

---
# Secret para webhook do Slack
apiVersion: v1
kind: Secret
metadata:
  name: slack-webhook
  namespace: backup-system
type: Opaque
data:
  url: <base64-encoded-slack-webhook-url>

---
# Exemplo de IAM Role Policy para o DumpScriptRole
# Esta policy deve ser anexada ao role especificado em AWS_ROLE_ARN
# {
#   "Version": "2012-10-17",
#   "Statement": [
#     {
#       "Effect": "Allow",
#       "Action": [
#         "s3:PutObject",
#         "s3:PutObjectAcl",
#         "s3:GetObject",
#         "s3:DeleteObject",
#         "s3:ListBucket"
#       ],
#       "Resource": [
#         "arn:aws:s3:::iclinic-main-backup-databases",
#         "arn:aws:s3:::iclinic-main-backup-databases/*"
#       ]
#     },
#     {
#       "Effect": "Allow",
#       "Action": [
#         "s3:ListAllMyBuckets",
#         "s3:GetBucketLocation"
#       ],
#       "Resource": "*"
#     }
#   ]
# }